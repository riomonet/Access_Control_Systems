Project:  Access Control Systems, design and Implementation
Meeting ID: 833 5759 9994 
Passcode: 961096

[[https://brooklyn-cuny-edu.zoom.us/j/83357599994?pwd=KzgzaGlHd1BGd3dOd0dkUWp2b1ZhQT09][zoom link]]

Balance:
theoritcian | practicioner
apply rigorous theory for our pracitcal projects

* Initial Brain Storming of relevate terms and phrases:



	Access, control, vehicle, authorization, authorized, pedestrian,
	entrance, exit, gate, lock, survailance, guest, visitor,
	resident,  86'd, forbidden, prevention, alert, recording,
	logging, system, permission, schedule, motor, maglock,
	video, camera, license, registration, identification, temporary,
	car, bicycle, vendor, customer, transient, delivery, mode of transportation.
	client, valve, device, person, location, service, sharing, modes,
	identification, token,

_more terms_

OTP
Single Sign-On Authentication (SSO) :
2nd Factor Authentication (Two-Factor Authentication):  2FA
MFA
three factor authenticatoin
Adaptive Authentication:
API Authentication:
HTTP Basic Authentication:
Mobile authentication:
API Passwords:
OAuth:
continuouse authenitcation


* Glossary

Authentication: To prove you are who you say you are.
		who can be a system, not only a human being.
		A user is who they claim to be.

Authorization:  what privelges you have, what role are you, what are you allowed to access ?


* Initital questions
who is allowed ?  ROLES? privaleges
	person, a vehicle. customer, guest,
		vendor, ups, postal, rubbsih

Is there automatic entry or do users need to push a button?

what mode of transportation will people be using ?

what mode of authentication will we be implementing ?

is there camera recording syncronicity with the access ?

what authenitcation scheme does my system support ?
    - research authenitcation schemes, explore authentication schemes

how do motors and locks get triggered to lock and unlock?

how do guests get in ?
how to do customers register?
are individual devices authorized?
are we readgin license plates?
who has access to where?
how do entered entitiies exit ?
are we gonna use ai?
is there a database?
is it sql?  mongo db or postgres? firebase? graphql?
what is the front end?			react/react native
is there an administraor panel?

How do we store credentials?


do credentials folllow the person or the device? (main research)
	 *Active research Area
	 what are possible sources of unique identification?
	 How do we prevent users from sharing their credentials?
	 no one is going to share there phone, their email address
	 license plates?
	 facial recoginition
	 how to prevent people from sharing access
	 license plates -

	 authentication device that is difficut to separate from the individual,
	or group

how do we give temporary credentials?
how many different access locations are there?
are we gonna do facial recognition?
Is there gonna be app where someon can tap a button?
Is there gonna be a way foor persons to gain temporrary access by
	registering and paying a fee?
Are we gonna collect fee's?
are we going to monitor vehicles within the gates?
what is our tech stack?
are we going to write an app for mobile?
are we going to use uSwitch control station
are we going to controll access to bathrooms?
are we going to charge for parking?
are we gonna be able to integrate this application
	with other modules for property management?
	can this be a micro service?

how are we going to authenticate admistrators?
are we going to subcontract authentication?
are we going to use cloud servers or self host?
are we gonna use node? express?
Is the whole application going to be written in javascript?

: Working Glossary Terms -



* flexiblity of understanding
	- what is the problem we are trying to solve vs feature implement
	- exploration 
	- top down approach vs Bottom up
	  agile approach - user story?
	  https://www.agilealliance.org/glossary/user-story-template/
	  
	  Design approach --
		Easily maintable software

	- what is agile approach?

	- technical 

	-  how do we control access permissions to a physical facility ?
	
	- Learning about the design from prototyping

	- among the list what is more important problem we are trying to solve
	  Minimum Viable Product  MVP
	  structure develeopment based on budget(time)

	  Architecting in a way that project can be evolved
	  small service?


* assumptions
	people don't share their email addresses. one time code.
	- time


*  unique identifiers - fingerprints

	  bluetooth - unique code
	  wifi -  has unique code
	  mac address

	  https://www.sci.pitt.edu/sites/default/files/PDFs/mobicom22iodetector.pdf

	  https://dl.acm.org/doi/pdf/10.1145/3517238
	  


Problem 1:
	What authentication schemes should we use for our MVP
how will they solve our problem

	Develop Problem statement.

- What is the scope of our MVP:
  what problems will have it have solved?


 
* what are the 5 authentication schemes  
	- Password based Authentication
	- Multi Factor Authentication
	- Certificate Based Authenticatoin
	  certifacate is a public keys signed by a certificate authority
	  like a drivers license
	- Biometric Authentication
	  - facial recognition
	  - fingerprint scanners
	  - voice recognition
	  - retina scanners
	- Token based Authentication
	  users enter credentials once and receive a token.
	  Json Web Tokens
	

* 3 authentication factors
	- something you know ( knowledge factor)
	  passwords/pins
	- something you have (Possession factor)
	  token/hardware device
	- something you are (inherence factor)
	  biometric




* Agile approach User Stories/Acceptance Criteria // example mapping => acceptance criteria

backlog of features/stories
pick one and do Example mapping
implement the feature

purpose is to discover the detail from a general user story
  
** BUSINESS REQUIRMENTS, ACCEPTANCE CRITERIA ACCEPTANCE TESTS, RULES (these are synonyms)

1. yellow card on top => is the user story/ stories must be small enough to sprint. 

2. each acceptance criteria/rule is writtine on a blue card and placed beneath the yellow card
   are you suppose to only focus on a single rule?

3. examples to illustrate these rules are written on green cards and placed under relevant rules
   Examples -> questions

   Examples are written in the following format

   1. Context - which is the initial state
   2. Action - the event that spurs some response from the system
   3. Expected Outcome

   Examples are what get implemented in cucumber           
           
4. questions that cant be answered are captured on red cards

5. this is done in a timed session until the scope of the story  is fleshed out and clear.
 
6. take  a picture of your map

7. may take 3 sessions to have a fully developed/understood story

8. SPRINT!

** notes for

don't over engineer just the smallest possible feature
one feature at a time (one user story)


tests, integration unit end to end
clean code
documentation
commenteed

come up with a single user story
develop acceptance criteria
and implement with minimal code
(along with testing)

** Story blueprint
[[https://www.spritecloud.com/guides/cucumber-gherkin?utm_source=youtube&utm_medium=gherkin_video_description&utm_campaign=cucumbergherkin_guide][cucumber gherkin guide from spriteCloud]]

*** basic story outline
    As a			(who wants to accomplish something)
    I want to			(what they want to accomplish)
    So that			(why they want to accomplish that thing)
    
*** more specific

TITLE
    as a:  Person or role who will benefit from this feature
    I want:  the feature
    so That: the benefit or value of the feature
    

*** 3 c's
Card - 
        STORIES ARE equivalent REQUIREMENTS.
        can just have title to start doesn't need full understanding to start

Conversation
Confirmation



** Story checklist
 - [ ] Keep them short
 - [ ] keep them simple
 - [ ] write from the perspective of the user
 - [ ] make the value/benefit of the story clear
 - [ ] describe one piece of functionality
 - [ ] Use acceptance criteria to show MVP

** examples


I want to be able to create other administrators for certain projects
So that I can delegate tasks more efficiently

** Acceptance Criteria  (Conditions of Satisfaction)
A description of each specific scenario of the narrative with the following structure

GIVEN:  The initial context at the beginning of the scenario, in one or more clauses
WHEN: the event that triggers the scenario
THEN: the expected outcome in one or more clauses

*** examples

**** As a potential conference attendee, I want to be able to register for the conference online, so that registration is simple and paperless.

Acceptance Criteria:
    Conference Attendance Form
    A user cannot submit a form without filling out all of the mandatory fields (First Name, Last Name, Company Name, Email Address, Position Title, Billing Information)
    Information from the form is stored in the registrations database
    Protection against spam is working
    Payment can be made via Paypal, Debit or Credit Cards
    An acknowledgement email is sent to the attendee after submitting the form

**** Title: Returns and exchanges go to inventory. As a store manager, I want to add items back to inventory when they are returned or exchanged, So that I can track inventory levels.

@scenario1

Scenario: Items returned for refund should be added to inventory. Given that a customer previously bought blue suede shoes from me And I have three blue suede shoes in inventory, When they return the blue suede shoes for a refund, Then I should have four blue suede shoes in inventory.

@scenario2

Scenario: Exchanged items should be returned to inventory. Given that a customer previously bought red baseball cap from me And I have two red baseball caps in inventory And three black baseball caps in inventory, When they exchange red baseball cap for a black baseball cap, Then I should have three red baseball caps in inventory And two black baseball caps in inventory.

Now that weâ€™ve explained Behaviour Driven Development and given a brief primer on how to write the user stories that are so central to BBD, letâ€™s look at Gherkin.

**** As a bank customer
I want to withdraw money from an ATM
So that Iâ€™m not constrained by opening hours or lines at the tellerâ€™s
**** As an administrator

** BDD Gherkin
Use BDD Tool -> Cucumber.io
                gherkin syntax

example github repo that uses cucumber
https://github.com/inukshuk/jekyll-scholar


*** backtracking design
[[https://www.youtube.com/watch?v=i0Q5orC5jSQ][Great description of how to write a gherkin]]



* M59 access control

write enough of user stories
to develop an idea of  MVP
to finsih within 10 weeks.

** Identify Users
	 1. Marina member
     2. Employees
	 3. owner
	 4. manager
	 5. guests
	 6. vendors (ups, daniels, rent a throne)

** User Stories

*** notes
**** <2023-09-08 Fri> develop rigorous group of scenario's
concrete examples -> scenarios
happy and sad scenarios
**** <2023-09-08 Fri>  realization about cameras and lic plate
I realize I have to find some sort of api that will have built in lic plate recognition for the cameras.

*** Marina Member stories
**** as a marina member, When I drive up to the gate,I want the vehicle gate to open
so I can drive into the marina

***** lic plate happy scenario ->
given vehicle approach to the gate => precondition
when the camera detects the license plate  => check the condition
when the lic plate found in data base
then acctuator opens the gate

***** lic plate unhappy scenario ->
camera cant detect lic plate
use scenarios to exhaustively
anticapte all possible error
scenarios. any where things can go wrong.


**** as a marina member I want to easily register my vehicle
So I have vehicle access to the marina

**** as a marina member I want the marina gates to be closed
So Me and My stuff are safe.

**** as marina member When I drive up to the gate, I want the vehicle gate to open
so I can drive out of the Marina.

**** as a marina member I want the vehicle gate to open for my guests
so my friends and family can visit me at the marina












** Ideas on how to write bdd scenarios
start off writng down what you want to the
thing you want to see working.
then you write down what happens before.
every action should have a check of what makes it succesful


given an initial state
when an action happens
then verify outcomesx

















** Feature pages (behaviors)
*** feature - as a marina member when I drive up to the gate
        as a marina member,
        When I drive up to the gate,
        I want the vehicle gate to open

        A. scenario: vehicle approaches gate
                given:  no vehicle infront of gate
                when:   a vehicle drives towards the gate
                when:   the lic plate comes into focus 
                then:   a "lic_plate_snapshot" of the license plate is taken

                A 1. scenario: no snapshot triggerd (ERROR CONDITION)
                        given:  no vehicle infront of gate
                        when:   a vehicle drives towards the gate
                        when:   no snapshot is triggered(error here)
                        then:   ?????????????????????
                
        B. scenario: snapshot has been taken
                given:  a vehicle is infront of the gate
                when:   a "lic_plate_snapshot" is taken
                then:   it is stored in the database with timesstamp as a name,
                and:    deocode image module is called to decode image from lic-plate into plain text.


        C. scenario: computer vision decoding
                given: decode image module has been called
                when:  the image is decoded into a plain text lic plate number.
                then:  the plain text lic plate number, the snapshot, and a timestamp
                       are stored in the database as a record of attempted entry
                and: the search database for authorization routine is called

                C1. scenario: unable to decode image(ERROR)
                        given: decode image module has been called
                        when:  the image is unable to be decoded.
                        then:  take another snapshot
                        and go back to B.

        D. scenario: database  finds plate number authorized
                given: the snapshot has been converted into plain text lic plate number
                when:  the search database for authorization routine is called 
                then:  the database is searched for the plain text lic plate number
                and if authorized calls open gate routine

                D1. scenario database does NOT find plate in authorized list
                        given: the snapshot has been converted into plain text lic plate number
                        when:  the search database for authorization routine is called
                        when and the plate is not found in the authorized list.
                        then:  ????????????????????????????

        E. scenario: vehicle authorized
                given: vehicle is authorized
                when: open gate routine called
                then: the vehicle gate relay is sent a signal to open gate
                and check_gate_opening routine is called.

        D. scneraio: gate opens
                given: gate is opening
                when: the check gate opening routins is called
                then: the routine uses computer vision to determine if the gate is/has
                opening/opened

        E  scenario: gate doesn't open
                given: relay was activated
                when: the gate doesn't open
                then: ??????????????????? 
*** notes from profeessor

These are excellent. At present, this organization is good. The user
stories and scenarios are hierarchical.Â  If a user story has too many
scenarios, it can be a sign that the user story is too big because we
wouldn't be able to complete it in an agile iteration, typically
defined as a period of 2 weeks.

If we think about how the system behaves,Â  after examining the
scenarios, perhaps, we can consider the following user stories (not
completely written):


   
as a  marina manager
I want to detect whether a vheicle is approaching the gate
so I can respond appropriately to what is happening outside of the marina gates

https://www.youtube.com/watch?v=VS6EEUVZGLE
short description of behaviorial test

https://www.youtube.com/watch?v=VS6EEUVZGLE
short description of agile

- agile development cycle
        owner has an idea
                develop prioritised list features and user stories(this is the product backlog)

          team selects what features it think it can implement from the product backlog this is called the sprint backlog within a 2 week timeframe
          this a sprint.
        after do a sprint review
        nto understand how to make the next sprint more efficient
        present to owner and customer.
        continuously get customer feedback after feature is released
        feedback to go back into feature list/user stories for future sprints.

context: given
event: when
outcome: then

CONSIDERING CHANGING direction..

maybe more attainable and offer more value
to the customer and me.

New Direction

As a customer,
I would like to be able to open the gate with my phone
so I don't have to buy a clicker if I lose one.

As an owner,
I would like customers to use their phones ot open the gate
so I dont have to keep on buying clickers.


1. I want to detect whether a vehicle is approaching the gate

A. scenario: a customer/visitor approaching
   given: the driveway is clear
   when:  a vehicle drives towards the gate
   then:  a dvr should start recording video


   A1. scenario motion not detected
     given: vehicle approaching the gate
     when: dvr fails to start recording
     then: an alert should be sent to management.


   A2. scenario: bicycle, pedestrion
      given: driveway clear
      when: a pedestrian or bicycle approaches the gate
      then: a dvr should start recording video.
      
A3. scenario: vehilce stopped in front fo gate
     given: vechile is approaching the gate
     when: the vehicle crosses the wire, 
     then: log entry with time stamp that vehicle is on outside wire

B. scenario: non marina traffic
   given: a vehicle driving towards the gate
   when: the car turns away and is out of frame
   then: the dvr should stop recording


C. scenario: gates open vehicle drives in 
   given: gates are open and vehcile drives in
   when:  the car is out of frames
   then: the dvr should stop recording.

D. scenario: two or more cars in driveway waiting to get in.



E. scenario: power goes out
   given: the driveway is clear
   when: the power goes out
   then: battery back up should be activated
   and alert should be sent to management and staff

F. scenario Battery back up activated
   given: gate and dvr are powered by battery back up.
   when: battery has 5 minutes left of power
   then: gate should open and stay open
   and alert should be sent to management,staff and customers

G. scenario
   
F. scenario: snowing or raining

G. scenario: 

2. I want to detect and decode a license plate of a vehicle at the gate

3. I want to store/log the data about the vehicle at the gate

4. I want to check if the license plate belonging to a "customer".

5. I want to open the gate upon command

6. I want to determine that no vehicle blocking the way of the gate

7. I want to close the gate upon command or after a timeout

8. I want to let the authenticated vehicle in.Â  (8 is a higher level
user story, that we do it after complete the other necessary user
stories, and there are more higher level user stories, perhaps).


I sketched them based on what you wrote. I was afraid that we may not be able to complete that big user story in two weeks, so we
want to break down them into smaller pieces. In this semester, we finish the few that can define our MVP (minimal viable product) 
-- our MVP might not be a fully functional authentication system although our second MVP might be; and the 1st MVP can just
display/speak a nice greeting message when a customer drives through the gate where we log its entry time  (if possible their
license plat number).


At present, it might help if we consider the following MVPs in secession:

- The system greets the customer who drives through the gate

- The system logs the customer's license plate and entry time and their authentication status (always true, at present; perhaps,
some guests, which shows false)

- The system that we remotely open/close gate via a Web app/Mobile app (make sure we can actuate the gate)

- The fully functional system that assemble the above 3 MVPs.

componenent based design
*** How do you select which tech to use ?

camera ?
software ?
*** greeter mvp as first milestone



Behavior driven development
behavior of the developer
behavios of the system
behavior of the user


as a customer
I want the system to detect my vechile is approaching
so my license plate can get recognized and my vehicle authorized

as an owner
I want vehicles approaching the gate to be detected

we are just trying to figure out what we want to build.

	assess who and why are we doing this.
	conveys how the system behaves
	and how we communicate

stories -> engineering


Human nature and MVP.

greeter

logger
access control

nonfuntional requirements
functional requirements

issue and task in github, milestones.
github project management
cat tag issues as task
project manaagement on github
wiki ?

small goal, small system


hobby project/enterprise  project.

well supported.


MENTAL MODEL.
IN SOFTWARE MANUFACTURING UNTIL USER ARE USING IT.
	REAL PRODUCT NOT UNTIL THE SOFTWARE.
	
BDD is very important
research.
training.
How to teach people to do BDD developement.
method for training people to BDD.

build options tech stack.
stories,
scenarios,
project management

	A - adopt a project

	1. develop requirements/features

	   user stories
	   scenarios      iterative 
	   mvp

	2. design and implementation testing phase agile

	   one scenario at a a time
	   can lead to best tech stack

	   given precondition
	   when  input/action
	   then	 testable output
	
	tdd
	   works on first scenarios
	   follow tdd write gherkin/cucumbers
	   

	
*** feature notes:
  - what does the camera do when a second car drives up during various phases of procedure?
          every vehicle in and out of the gate should have lic plate and image of passenger taken and stored.

https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard

https://en.wikipedia.org/wiki/Adapter_pattern

https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns

https://itsadeliverything.com/revisiting-the-iterative-incremental-mona-lisa

low fidelity iterations to high fidelity
sketch to fully implementd painting


database interface layer not
embedded into the flask app.

https://www.humanizingwork.com/the-humanizing-work-guide-to-splitting-user-stories/
methodology


postgresql
https://www.postgresql.org/docs/current/libpq-pgpass.html
