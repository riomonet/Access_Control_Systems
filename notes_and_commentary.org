Project:  Access Control Systems, design and Implementation
Meeting ID: 833 5759 9994
Passcode: 961096

[[https://brooklyn-cuny-edu.zoom.us/j/83357599994?pwd=KzgzaGlHd1BGd3dOd0dkUWp2b1ZhQT09][zoom link]]

Balance:
theoritcian | practicioner
apply rigorous theory for our pracitcal projects

* Initial Brain Storming of relevate terms and phrases:



	Access, control, vehicle, authorization, authorized, pedestrian,
	entrance, exit, gate, lock, survailance, guest, visitor,
	resident,  86'd, forbidden, prevention, alert, recording,
	logging, system, permission, schedule, motor, maglock,
	video, camera, license, registration, identification, temporary,
	car, bicycle, vendor, customer, transient, delivery, mode of transportation.
	client, valve, device, person, location, service, sharing, modes,
	identification, token,

_more terms_

OTP
Single Sign-On Authentication (SSO) :
2nd Factor Authentication (Two-Factor Authentication):  2FA
MFA
three factor authenticatoin
Adaptive Authentication:
API Authentication:
HTTP Basic Authentication:
Mobile authentication:
API Passwords:
OAuth:
continuouse authenitcation


* Glossary

Authentication: To prove you are who you say you are.
		who can be a system, not only a human being.
		A user is who they claim to be.

Authorization:  what privelges you have, what role are you, what are you allowed to access ?


* Initital questions
who is allowed ?  ROLES? privaleges
	person, a vehicle. customer, guest,
		vendor, ups, postal, rubbsih

Is there automatic entry or do users need to push a button?

what mode of transportation will people be using ?

what mode of authentication will we be implementing ?

is there camera recording syncronicity with the access ?

what authenitcation scheme does my system support ?
    - research authenitcation schemes, explore authentication schemes

how do motors and locks get triggered to lock and unlock?

how do guests get in ?
how to do customers register?
are individual devices authorized?
are we readgin license plates?
who has access to where?
how do entered entitiies exit ?
are we gonna use ai?
is there a database?
is it sql?  mongo db or postgres? firebase? graphql?
what is the front end?			react/react native
is there an administraor panel?

How do we store credentials?


do credentials folllow the person or the device? (main research)
	 *Active research Area
	 what are possible sources of unique identification?
	 How do we prevent users from sharing their credentials?
	 no one is going to share there phone, their email address
	 license plates?
	 facial recoginition
	 how to prevent people from sharing access
	 license plates -

	 authentication device that is difficut to separate from the individual,
	or group

how do we give temporary credentials?
how many different access locations are there?
are we gonna do facial recognition?
Is there gonna be app where someon can tap a button?
Is there gonna be a way foor persons to gain temporrary access by
	registering and paying a fee?
Are we gonna collect fee's?
are we going to monitor vehicles within the gates?
what is our tech stack?
are we going to write an app for mobile?
are we going to use uSwitch control station
are we going to controll access to bathrooms?
are we going to charge for parking?
are we gonna be able to integrate this application
	with other modules for property management?
	can this be a micro service?

how are we going to authenticate admistrators?
are we going to subcontract authentication?
are we going to use cloud servers or self host?
are we gonna use node? express?
Is the whole application going to be written in javascript?

: Working Glossary Terms -



* flexiblity of understanding
	- what is the problem we are trying to solve vs feature implement
	- exploration 
	- top down approach vs Bottom up
	  agile approach - user story?
	  https://www.agilealliance.org/glossary/user-story-template/
	  
	  Design approach --
		Easily maintable software

	- what is agile approach?

	- technical 

	-  how do we control access permissions to a physical facility ?
	
	- Learning about the design from prototyping

	- among the list what is more important problem we are trying to solve
	  Minimum Viable Product  MVP
	  structure develeopment based on budget(time)

	  Architecting in a way that project can be evolved
	  small service?


* assumptions
	people don't share their email addresses. one time code.
	- time


*  unique identifiers - fingerprints

	  bluetooth - unique code
	  wifi -  has unique code
	  mac address

	  https://www.sci.pitt.edu/sites/default/files/PDFs/mobicom22iodetector.pdf

	  https://dl.acm.org/doi/pdf/10.1145/3517238
	  


Problem 1:
	What authentication schemes should we use for our MVP
how will they solve our problem

	Develop Problem statement.

- What is the scope of our MVP:
  what problems will have it have solved?


 
* what are the 5 authentication schemes  
	- Password based Authentication
	- Multi Factor Authentication
	- Certificate Based Authenticatoin
	  certifacate is a public keys signed by a certificate authority
	  like a drivers license
	- Biometric Authentication
	  - facial recognition
	  - fingerprint scanners
	  - voice recognition
	  - retina scanners
	- Token based Authentication
	  users enter credentials once and receive a token.
	  Json Web Tokens
	

* 3 authentication factors
	- something you know ( knowledge factor)
	  passwords/pins
	- something you have (Possession factor)
	  token/hardware device
	- something you are (inherence factor)
	  biometric




* Agile approach User Stories/Acceptance Criteria // example mapping => acceptance criteria

backlog of features/stories
pick one and do Example mapping
implement the feature

purpose is to discover the detail from a general user story
  
** BUSINESS REQUIRMENTS, ACCEPTANCE CRITERIA ACCEPTANCE TESTS, RULES (these are synonyms)

1. yellow card on top => is the user story/ stories must be small enough to sprint. 

2. each acceptance criteria/rule is writtine on a blue card and placed beneath the yellow card
   are you suppose to only focus on a single rule?

3. examples to illustrate these rules are written on green cards and placed under relevant rules
   Examples -> questions

   Examples are written in the following format

   1. Context - which is the initial state
   2. Action - the event that spurs some response from the system
   3. Expected Outcome

   Examples are what get implemented in cucumber           
           
4. questions that cant be answered are captured on red cards

5. this is done in a timed session until the scope of the story  is fleshed out and clear.
 
6. take  a picture of your map

7. may take 3 sessions to have a fully developed/understood story

8. SPRINT!

** notes for

don't over engineer just the smallest possible feature
one feature at a time (one user story)


tests, integration unit end to end
clean code
documentation
commenteed

come up with a single user story
develop acceptance criteria
and implement with minimal code
(along with testing)

** Story blueprint
[[https://www.spritecloud.com/guides/cucumber-gherkin?utm_source=youtube&utm_medium=gherkin_video_description&utm_campaign=cucumbergherkin_guide][cucumber gherkin guide from spriteCloud]]

*** basic story outline
    As a			(who wants to accomplish something)
    I want to			(what they want to accomplish)
    So that			(why they want to accomplish that thing)

*** more specific

TITLE
    as a:  Person or role who will benefit from this feature
    I want:  the feature
    so That: the benefit or value of the feature
    

*** 3 c's
Card - 
        STORIES ARE equivalent REQUIREMENTS.
        can just have title to start doesn't need full understanding to start

Conversation
Confirmation



** Story checklist
 - [ ] Keep them short
 - [ ] keep them simple
 - [ ] write from the perspective of the user
 - [ ] make the value/benefit of the story clear
 - [ ] describe one piece of functionality
 - [ ] Use acceptance criteria to show MVP

** examples


I want to be able to create other administrators for certain projects
So that I can delegate tasks more efficiently

** Acceptance Criteria  (Conditions of Satisfaction)
A description of each specific scenario of the narrative with the following structure

GIVEN:  The initial context at the beginning of the scenario, in one or more clauses
WHEN: the event that triggers the scenario
THEN: the expected outcome in one or more clauses

*** examples

**** As a potential conference attendee, I want to be able to register for the conference online, so that registration is simple and paperless.

Acceptance Criteria:
    Conference Attendance Form
    A user cannot submit a form without filling out all of the mandatory fields (First Name, Last Name, Company Name, Email Address, Position Title, Billing Information)
    Information from the form is stored in the registrations database
    Protection against spam is working
    Payment can be made via Paypal, Debit or Credit Cards
    An acknowledgement email is sent to the attendee after submitting the form

**** Title: Returns and exchanges go to inventory. As a store manager, I want to add items back to inventory when they are returned or exchanged, So that I can track inventory levels.

@scenario1

Scenario: Items returned for refund should be added to inventory. Given that a customer previously bought blue suede shoes from me And I have three blue suede shoes in inventory, When they return the blue suede shoes for a refund, Then I should have four blue suede shoes in inventory.

@scenario2

Scenario: Exchanged items should be returned to inventory. Given that a customer previously bought red baseball cap from me And I have two red baseball caps in inventory And three black baseball caps in inventory, When they exchange red baseball cap for a black baseball cap, Then I should have three red baseball caps in inventory And two black baseball caps in inventory.

Now that weâ€™ve explained Behaviour Driven Development and given a brief primer on how to write the user stories that are so central to BBD, letâ€™s look at Gherkin.

**** As a bank customer
I want to withdraw money from an ATM
So that Iâ€™m not constrained by opening hours or lines at the tellerâ€™s
**** As an administrator

** BDD Gherkin
Use BDD Tool -> Cucumber.io
                gherkin syntax

example github repo that uses cucumber
https://github.com/inukshuk/jekyll-scholar


*** backtracking design
[[https://www.youtube.com/watch?v=i0Q5orC5jSQ][Great description of how to write a gherkin]]


* M59 access control

wrtie enough of user stories
to develop an idea of  MVP
to finsih within 10 weeks.

Vehicle gate
pedestrian gate
dock access
bathroom access

** Identify Users
	 1. Marina member
     2. Employees
	 3. owner
	 4. manager
	 5. guests
	 6. vendors (ups, daniels, rent a throne)

** User Stories

*** Slip holders

**** as a marina member, 
When I drive up to the gate, I want the vehicle gate to open
so I can drive into the marina

**** as a marina member
I want the marina gates to be closed
So Me and My stuff are safe.

**** as marina member
When I drive up to the gate, I want the vehicle gate to open
so I can drive out of the Marina.

**** as a marina member
I want to easily register my vehicle
so i can get in and out of the Marina.

**** as a marina member
I want the vehicle gate to open for my guests
so my friends and family can visit me at the marina



